openapi: 3.1.0
info:
  title: ConfidenceID Trust Ecosystem API
  description: |
    API for the ConfidenceID Trust Ecosystem, providing holistic, multimodal verification
    and confidence scoring of AI-generated content. The API incorporates temporal trust dynamics,
    collective memory, decentralized consensus, information-theoretic compression, and
    contextually adaptive interfaces.
  version: 1.0.0
  contact:
    name: ConfidenceID Team
    url: https://github.com/YourOrg/ConfidenceID
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
servers:
  - url: https://api.confidenceid.org/v1
    description: Production API Server
  - url: https://api.staging.confidenceid.org/v1
    description: Staging API Server
tags:
  - name: Scoring
    description: Endpoints for holistic confidence scoring of content
  - name: TemporalTrustField
    description: Endpoints for accessing and analyzing temporal trust fields
  - name: CollectiveMemory
    description: Endpoints for querying the verification fossil record
  - name: DecentralizedProtocol
    description: Endpoints for interacting with the decentralized trust network
  - name: InformationCompression
    description: Endpoints for compressed trust signals
  - name: EmbodiedInterface
    description: Endpoints for adaptive trust interface recommendations
  - name: ResidueManagement
    description: Endpoints for working with symbolic residue
  - name: Evolution
    description: Endpoints for participating in ConfidenceID's evolution

paths:
  /score:
    post:
      summary: Score multimodal content
      description: |
        Submit multimodal content for comprehensive confidence scoring.
        Returns a holistic ConfidenceID score along with detailed component scores
        and trust field information.
      operationId: scoreContent
      tags:
        - Scoring
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScoringRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MultipartScoringRequest'
      responses:
        '200':
          description: Content successfully scored
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScoringResponse'
        '400':
          description: Invalid request parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '413':
          description: Content too large
        '429':
          description: Rate limit exceeded
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - ApiKeyAuth: []
  
  /score/{scoreId}:
    get:
      summary: Retrieve an existing score by ID
      description: |
        Retrieve a previously generated confidence score by its unique identifier.
      operationId: getScoreById
      tags:
        - Scoring
      parameters:
        - name: scoreId
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: Unique identifier for the score
      responses:
        '200':
          description: Score retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScoringResponse'
        '404':
          description: Score not found
        '500':
          description: Internal server error
      security:
        - ApiKeyAuth: []

  /temporal-trust-field:
    post:
      summary: Get temporal trust field for content
      description: |
        Analyze the temporal trust dynamics for content.
        Returns a detailed trust field representation showing how trust evolves over time.
      operationId: getTemporalTrustField
      tags:
        - TemporalTrustField
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TemporalFieldRequest'
      responses:
        '200':
          description: Temporal trust field retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TemporalFieldResponse'
        '400':
          description: Invalid request parameters
        '500':
          description: Internal server error
      security:
        - ApiKeyAuth: []

  /temporal-trust-field/{fieldId}/stability:
    get:
      summary: Get stability metrics for a trust field
      description: |
        Retrieve stability metrics for a previously generated trust field.
      operationId: getTrustFieldStability
      tags:
        - TemporalTrustField
      parameters:
        - name: fieldId
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: Unique identifier for the trust field
        - name: timeWindow
          in: query
          required: false
          schema:
            type: string
            default: '1d'
          description: Time window for stability analysis (e.g., '1h', '1d', '7d')
      responses:
        '200':
          description: Stability metrics retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StabilityResponse'
        '404':
          description: Trust field not found
        '500':
          description: Internal server error
      security:
        - ApiKeyAuth: []

  /collective-memory/excavate:
    post:
      summary: Excavate patterns from the fossil record
      description: |
        Query the collective trust memory to identify patterns, anomalies,
        and insights from verification history.
      operationId: excavatePatterns
      tags:
        - CollectiveMemory
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ArchaeologyRequest'
      responses:
        '200':
          description: Archaeological patterns retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArchaeologyResponse'
        '400':
          description: Invalid request parameters
        '403':
          description: Insufficient permissions to access requested fossil records
        '500':
          description: Internal server error
      security:
        - ApiKeyAuth: []

  /collective-memory/fossils:
    post:
      summary: Store verification fossil
      description: |
        Add a verification event to the collective memory as a fossil record.
      operationId: storeVerificationFossil
      tags:
        - CollectiveMemory
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VerificationFossil'
      responses:
        '201':
          description: Fossil stored successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FossilResponse'
        '400':
          description: Invalid fossil data
        '500':
          description: Internal server error
      security:
        - ApiKeyAuth: []

  /decentralized-protocol/nodes:
    post:
      summary: Register a verification node
      description: |
        Register a new node in the decentralized trust network.
      operationId: registerNode
      tags:
        - DecentralizedProtocol
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NodeRegistration'
      responses:
        '201':
          description: Node registered successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodeResponse'
        '400':
          description: Invalid node data
        '409':
          description: Node ID already exists
        '500':
          description: Internal server error
      security:
        - ApiKeyAuth: []

  /decentralized-protocol/nodes/{nodeId}:
    get:
      summary: Get node information
      description: |
        Retrieve information about a specific verification node.
      operationId: getNodeInfo
      tags:
        - DecentralizedProtocol
      parameters:
        - name: nodeId
          in: path
          required: true
          schema:
            type: string
          description: Unique identifier for the node
      responses:
        '200':
          description: Node information retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodeInfo'
        '404':
          description: Node not found
        '500':
          description: Internal server error
      security:
        - ApiKeyAuth: []

  /decentralized-protocol/challenges:
    post:
      summary: Submit verification challenge
      description: |
        Submit content for verification through the decentralized trust network.
      operationId: submitVerificationChallenge
      tags:
        - DecentralizedProtocol
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VerificationChallenge'
      responses:
        '202':
          description: Challenge accepted for verification
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChallengeResponse'
        '400':
          description: Invalid challenge data
        '500':
          description: Internal server error
      security:
        - ApiKeyAuth: []

  /decentralized-protocol/challenges/{challengeId}:
    get:
      summary: Get challenge status and results
      description: |
        Retrieve the status and verification results for a challenge.
      operationId: getChallengeStatus
      tags:
        - DecentralizedProtocol
      parameters:
        - name: challengeId
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: Unique identifier for the challenge
      responses:
        '200':
          description: Challenge status and results retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChallengeStatus'
        '404':
          description: Challenge not found
        '500':
          description: Internal server error
      security:
        - ApiKeyAuth: []

  /information-compression/compress:
    post:
      summary: Compress trust information
      description: |
        Compress rich verification history and trust data into dense, efficient signals.
      operationId: compressTrustInformation
      tags:
        - InformationCompression
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompressionRequest'
      responses:
        '200':
          description: Trust information compressed successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompressionResponse'
        '400':
          description: Invalid request parameters
        '500':
          description: Internal server error
      security:
        - ApiKeyAuth: []

  /information-compression/decompress:
    post:
      summary: Decompress trust signal
      description: |
        Decompress a compressed trust signal using a decompression key.
      operationId: decompressTrustSignal
      tags:
        - InformationCompression
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DecompressionRequest'
      responses:
        '200':
          description: Trust signal decompressed successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DecompressionResponse'
        '400':
          description: Invalid request parameters or decompression key
        '500':
          description: Internal server error
      security:
        - ApiKeyAuth: []

  /embodied-interface/get-adapted-interface:
    post:
      summary: Get adapted trust interface
      description: |
        Get a context-appropriate interface recommendation for displaying trust information.
      operationId: getAdaptedInterface
      tags:
        - EmbodiedInterface
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InterfaceRequest'
      responses:
        '200':
          description: Adapted interface retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InterfaceResponse'
        '400':
          description: Invalid request parameters
        '500':
          description: Internal server error
      security:
        - ApiKeyAuth: []

  /residue/log:
    post:
      summary: Log symbolic residue
      description: |
        Log verification residue (failures, anomalies, edge cases) for analysis.
      operationId: logResidue
      tags:
        - ResidueManagement
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResidueLog'
      responses:
        '201':
          description: Residue logged successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResidueLogResponse'
        '400':
          description: Invalid residue data
        '500':
          description: Internal server error
      security:
        - ApiKeyAuth: []

  /residue/forecast:
    post:
      summary: Forecast emerging residue patterns
      description: |
        Predict potential emerging attack vectors or verification challenges based on residue patterns.
      operationId: forecastResidue
      tags:
        - ResidueManagement
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ForecastRequest'
      responses:
        '200':
          description: Forecast generated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForecastResponse'
        '400':
          description: Invalid request parameters
        '500':
          description: Internal server error
      security:
        - ApiKeyAuth: []

  /evolution/blueprints:
    get:
      summary: List available evolution blueprints
      description: |
        Retrieve a list of available blueprints for evolving ConfidenceID components.
      operationId: listBlueprints
      tags:
        - Evolution
      parameters:
        - name: componentType
          in: query
          required: false
          schema:
            type: string
            enum:
              - temporal_trust_field
              - collective_memory
              - decentralized_protocol
              - information_compression
              - embodied_interface
              - modality_analyzer
              - cross_modal_engine
              - scoring_aggregator
              - residue_management
          description: Filter blueprints by component type
      responses:
        '200':
          description: Blueprints retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BlueprintSummary'
        '500':
          description: Internal server error
      security:
        - ApiKeyAuth: []

  /evolution/blueprints/{blueprintId}:
    get:
      summary: Get blueprint details
      description: |
        Retrieve detailed information about a specific evolution blueprint.
      operationId: getBlueprintDetails
      tags:
        - Evolution
      parameters:
        - name: blueprintId
          in: path
          required: true
          schema:
            type: string
          description: Unique identifier for the blueprint
      responses:
        '200':
          description: Blueprint details retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlueprintDetails'
        '404':
          description: Blueprint not found
        '500':
          description: Internal server error
      security:
        - ApiKeyAuth: []

  /evolution/cycles:
    post:
      summary: Initiate evolutionary cycle
      description: |
        Start a new evolutionary cycle for a ConfidenceID component using a blueprint.
      operationId: initiateEvolutionaryCycle
      tags:
        - Evolution
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CycleRequest'
      responses:
        '202':
          description: Evolutionary cycle initiated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CycleResponse'
        '400':
          description: Invalid request parameters
        '500':
          description: Internal server error
      security:
        - ApiKeyAuth: []

  /evolution/cycles/{cycleId}:
    get:
      summary: Get evolutionary cycle status
      description: |
        Retrieve the status of an ongoing or completed evolutionary cycle.
      operationId: getCycleStatus
      tags:
        - Evolution
      parameters:
        - name: cycleId
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: Unique identifier for the evolutionary cycle
      responses:
        '200':
          description: Cycle status retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CycleStatus'
        '404':
          description: Cycle not found
        '500':
          description: Internal server error
      security:
        - ApiKeyAuth: []

    patch:
      summary: Provide feedback on evolutionary cycle
      description: |
        Submit feedback on an ongoing evolutionary cycle to guide its direction.
      operationId: provideCycleFeedback
      tags:
        - Evolution
      parameters:
        - name: cycleId
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: Unique identifier for the evolutionary cycle
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CycleFeedback'
      responses:
        '200':
          description: Feedback submitted successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeedbackResponse'
        '400':
          description: Invalid feedback data
        '404':
          description: Cycle not found
        '500':
          description: Internal server error
      security:
        - ApiKeyAuth: []

components:
  schemas:
    ScoringRequest:
      type: object
      required:
        - content
      properties:
        content:
          type: object
          description: Content to be scored (one or more modalities)
          properties:
            text:
              type: string
              description: Text content
            image:
              type: string
              format: binary
              description: Image content in base64 encoding
            audio:
              type: string
              format: binary
              description: Audio content in base64 encoding
            video:
              type: string
              format: binary
              description: Video content in base64 encoding
          anyOf:
            - required: [text]
            - required: [image]
            - required: [audio]
            - required: [video]
        context:
          type: object
          description: Contextual information for scoring
          properties:
            domain:
              type: string
              description: Content domain (e.g., news, entertainment, education)
              example: news
            audience:
              type: string
              description: Target audience (e.g., general, professional, academic)
              example: general_public
            purpose:
              type: string
              description: Content purpose (e.g., information, entertainment)
              example: information
        options:
          type: object
          description: Scoring options
          properties:
            include_temporal_field:
              type: boolean
              description: Include temporal trust field in response
              default: false
            include_archaeology:
              type: boolean
              description: Include archaeological patterns in response
              default: false
            include_consensus_details:
              type: boolean
              description: Include details of consensus verification
              default: false
            include_compressed_signal:
              type: boolean
              description: Include compressed trust signal
              default: false
            detail_level:
              type: string
              enum: [minimal, standard, detailed]
              description: Level of detail in the response
              default: standard
              
    MultipartScoringRequest:
      type: object
      properties:
        text:
          type: string
          description: Text content
        image:
          type: string
          format: binary
          description: Image content
        audio:
          type: string
          format: binary
          description: Audio content
        video:
          type: string
          format: binary
          description: Video content
        context:
          type: string
          format: json
          description: JSON string containing context information
        options:
          type: string
          format: json
          description: JSON string containing scoring options
      anyOf:
        - required: [text]
        - required: [image]
        - required: [audio]
        - required: [video]
          
    ScoringResponse:
      type: object
      required:
        - score_id
        - overall_score
        - modality_scores
        - timestamp
      properties:
        score_id:
          type: string
          format: uuid
          description: Unique identifier for this score
        overall_score:
          type: number
          format: float
          minimum: 0
          maximum: 1
          description: Overall ConfidenceID score
        modality_scores:
          type: object
          description: Scores for each modality
          properties:
            text:
              $ref: '#/components/schemas/ModalityScore'
            image:
              $ref: '#/components/schemas/ModalityScore'
            audio:
              $ref: '#/components/schemas/ModalityScore'
            video:
              $ref: '#/components/schemas/ModalityScore'
        cross_modal_scores:
          type: array
          description: Scores for cross-modal consistency
          items:
            $ref: '#/components/schemas/CrossModalScore'
        temporal_field:
          $ref: '#/components/schemas/TemporalFieldSummary'
        archaeological_patterns:
          type: array
          description: Patterns from the collective trust memory
          items:
            $ref: '#/components/schemas/ArchaeologicalPattern'
        consensus_details:
          $ref: '#/components/schemas/ConsensusDetails'
        compressed_signal:
          $ref: '#/components/schemas/CompressedSignal'
        interface_recommendation:
          $ref: '#/components/schemas/InterfaceSummary'
        timestamp:
          type: string
          format: date-time
          description: When the score was generated
          
    ModalityScore:
      type: object
      required:
        - score
        - confidence
      properties:
        score:
          type: number
          format: float
          minimum: 0
          maximum: 1
          description: Confidence score for this modality
        confidence:
          type: number
          format: float
          minimum: 0
          maximum: 1
          description: Confidence in the score
        verification_methods:
          type: array
          description: Methods used for verification
          items:
            type: object
            properties:
              method:
                type: string
                description: Verification method name
                example: watermark_detection
              score:
                type: number
                format: float
                minimum: 0
                maximum: 1
                description: Score from this method
              confidence:
                type: number
                format: float
                minimum: 0
                maximum: 1
                description: Confidence in this method's score
              details:
                type: object
                description: Method-specific details
                
    CrossModalScore:
      type: object
      required:
        - modalities
        - score
        - confidence
      properties:
        modalities:
          type: array
          description: Modalities being compared
          items:
            type: string
            enum: [text, image, audio, video]
          minItems: 2
          maxItems: 2
        score:
          type: number
          format: float
          minimum: 0
          maximum: 1
          description: Cross-modal consistency score
        confidence:
          type: number
          format: float
          minimum: 0
          maximum: 1
          description: Confidence in the score
        analysis:
          type: string
          description: Textual analysis of cross-modal consistency
          
    TemporalFieldRequest:
      type: object
      required:
        - content_fingerprint
      properties:
        content_fingerprint:
          type: string
          description: Fingerprint of the content to analyze
        temporal_range:
          type: object
          properties:
            start:
              type: string
              format: date-time
              description: Start of temporal range
            end:
              type: string
              format: date-time
              description: End of temporal range
        options:
          type: object
          properties:
            include_visualization:
              type: boolean
              description: Include visualization data
              default: false
            field_dimensions:
              type: array
              description: Specific field dimensions to include
              items:
                type: string
                enum: [value, velocity, acceleration, decay, amplification]
              
    TemporalFieldResponse:
      type: object
      required:
        - field_id
        - content_fingerprint
        - field_tensor
        - timestamp
      properties:
        field_id:
          type: string
          format: uuid
          description: Unique identifier for this field
        content_fingerprint:
          type: string
          description: Fingerprint of the analyzed content
        field_tensor:
          $ref: '#/components/schemas/TrustFieldTensor'
        stability:
          type: number
          format: float
          minimum: 0
          maximum: 1
          description: Overall stability of the trust field
        timestamp:
          type: string
          format: date-time
          description: When the field was generated
        visualization_data:
          type: object
          description: Data for visualizing the trust field
          
    TemporalFieldSummary:
      type: object
      required:
        - field_id
        - stability
        - trend
      properties:
        field_id:
          type: string
          format: uuid
          description: Unique identifier for this field
        stability:
          type: number
          format: float
          minimum: 0
          maximum: 1
          description: Overall stability of the trust field
        trend:
          type: number
          format: float
          minimum: -1
          maximum: 1
          description: Overall trend direction (-1 to 1)
        average_velocity:
          type: number
          format: float
          description: Average velocity of trust changes
        recommendation:
          type: string
          description: Recommendation based on temporal analysis
          
    TrustFieldTensor:
      type: object
      required:
        - dimensions
        - content_types
        - tensor_data
        - timestamp
      properties:
        dimensions:
          type: array
          description: Dimensions of the trust field tensor
          items:
            type: string
            enum: [value, velocity, acceleration, decay, amplification]
        content_types:
          type: array
          description: Content types in the tensor
          items:
            type: string
            enum: [text, image, audio, video, multimodal]
        context_keys:
          type: array
          description: Context keys in the tensor
          items:
            type: string
        context_values:
          type: object
          description: Possible values for each context key
          additionalProperties:
            type: array
            items:
              type: string
        tensor_data:
          type: array
          description: The tensor data as a multidimensional array
          items:
            type: array
            items: {}
        timestamp:
          type: string
          format: date-time
          description: When the tensor was generated
          
    StabilityResponse:
      type: object
      required:
        - field_id
        - time_window
        - stability_score
      properties:
        field_id:
          type: string
          format: uuid
          description: Unique identifier for the trust field
        time_window:
          type: string
          description: Time window used for analysis
        stability_score:
          type: number
          format: float
          minimum: 0
          maximum: 1
          description: Overall stability score
        stability_trend:
          type: number
          format: float
          minimum: -1
          maximum: 1
          description: Trend in stability over the time window
        content_type_stability:
          type: object
          description: Stability scores by content type
          additionalProperties:
            type: number
            format: float
            minimum: 0
            maximum: 1
        recommendations:
          type: array
          description: Recommendations for improving stability
          items:
            type: object
            properties:
              type:
                type: string
                description: Type of recommendation
              severity:
                type: string
                enum: [low, medium, high]
              description:
                type: string
                description: Description of the recommendation
              suggestion:
                type: string
                description: Suggested action
                
    ArchaeologyRequest:
      type: object
      properties:
        content_fingerprint:
          type: string
          description: Fingerprint of content to focus on
        temporal_range:
          type: object
          properties:
            start:
              type: string
              format: date-time
              description: Start of temporal range
            end:
              type: string
              format: date-time
              description: End of temporal range
        context_filter:
          type: object
          description: Filter for contexts
          properties:
            exact_match:
              type: object
              description: Contexts that must exactly match
              additionalProperties:
                type: string
            partial_match:
              type: object
              description: Contexts with any of these values
              additionalProperties:
                type: array
                items:
                  type: string
            exclude:
              type: object
              description: Contexts that should not have these values
              additionalProperties:
                type: array
                items:
                  type: string
        verification_types:
          type: array
          description: Types of verification to include
          items:
            type: string
            enum: [watermark_detection, artifact_detection, semantic_coherence, temporal_consistency, manual_verification, cross_modal_verification, consensus_verification, archaeological_pattern]
        content_types:
          type: array
          description: Content types to include
          items:
            type: string
            enum: [text, image, audio, video, multimodal]
        pattern_types:
          type: array
          description: Pattern types to look for
          items:
            type: string
            enum: [temporal, contextual, cross_modal, source, confidence, anomaly, consistency]
        related_fingerprints:
          type: array
          description: Related content fingerprints to include
          items:
            type: string
        include_anomalies:
          type: boolean
          description: Whether to include anomalies
          default: true
        include_consistencies:
          type: boolean
          description: Whether to include consistencies
          default: true
        include_evolution:
          type: boolean
          description: Whether to include confidence evolution
          default: true
        max_results:
          type: integer
          description: Maximum number of results
          default: 100
          
    ArchaeologyResponse:
      type: object
      required:
        - report_id
        - generation_time
      properties:
        report_id:
          type: string
          description: Unique identifier for this report
        query:
          $ref: '#/components/schemas/ArchaeologyRequest'
        generation_time:
          type: string
          format: date-time
          description: When the report was generated
        temporal_patterns:
          type: array
          description: Temporal patterns found
          items:
            $ref: '#/components/schemas/ArchaeologicalPattern'
        anomalies:
          type: array
          description: Anomalies found
          items:
            $ref: '#/components/schemas/VerificationAnomaly'
        consistencies:
          type: array
          description: Consistencies found
          items:
            $ref: '#/components/schemas/VerificationConsistency'
        confidence_evolution:
          $ref: '#/components/schemas/ConfidenceEvolution'
        pattern_summary:
          type: string
          description: Summary of patterns found
        anomaly_summary:
          type: string
          description: Summary of anomalies found
        consistency_summary:
          type: string
          description: Summary of consistencies found
        evolution_summary:
          type: string
          description: Summary of confidence evolution
        recommendations:
          type: array
          description: Recommendations based on findings
          items:
            type: string
        fossil_count:
          type: integer
          description: Number of fossils analyzed
        pattern_confidence:
          type: number
          format: float
          minimum: 0
          maximum: 1
          description: Overall confidence in patterns
          
    ArchaeologicalPattern:
      type: object
      required:
        - pattern_id
        - pattern_type
        - detection_time
        - confidence
        - description
      properties:
        pattern_id:
          type: string
          description: Unique identifier for this pattern
        pattern_type:
          type: string
          enum: [temporal, contextual, cross_modal, source, confidence, anomaly, consistency]
          description: Type of pattern
        content_fingerprints:
          type: array
          description: Fingerprints of content involved
          items:
            type: string
        start_time:
          type: string
          format: date-time
          description: Start of pattern period
        end_time:
          type: string
          format: date-time
          description: End of pattern period
        fossil_ids:
          type: array
          description: IDs of fossils that form this pattern
          items:
            type: string
        detection_time:
          type: string
          format: date-time
          description: When the pattern was detected
        confidence:
          type: number
          format: float
          minimum: 0
          maximum: 1
          description: Confidence in the pattern
        description:
          type: string
          description: Human-readable description
        metrics:
          type: object
          description: Quantitative metrics
          additionalProperties:
            type: number
            format: float
        visualizable:
          type: boolean
          description: Whether this pattern can be visualized
          default: true
        visualization_data:
          type: object
          description: Data for visualization
          
    VerificationAnomaly:
      type: object
      required:
        - anomaly_id
        - anomaly_type
        - detection_time
        - severity
        - confidence
        - description
      properties:
        anomaly_id:
          type: string
          description: Unique identifier for this anomaly
        anomaly_type:
          type: string
          enum: [confidence_spike, contradiction, context_mismatch, temporal_discontinuity, cross_modal_inconsistency, source_deviation, pattern_break]
          description: Type of anomaly
        content_fingerprints:
          type: array
          description: Fingerprints of content involved
          items:
            type: string
        fossil_ids:
          type: array
          description: IDs of fossils that form this anomaly
          items:
            type: string
        detection_time:
          type: string
          format: date-time
          description: When the anomaly was detected
        severity:
          type: number
          format: float
          minimum: 0
          maximum: 1
          description: Severity of the anomaly
        confidence:
          type: number
          format: float
          minimum: 0
          maximum: 1
          description: Confidence in the anomaly detection
        description:
          type: string
          description: Human-readable description
        expected_behavior:
          type: string
          description: Description of expected behavior
        potential_causes:
          type: array
          description: Potential causes of the anomaly
          items:
            type: string
        recommended_actions:
          type: array
          description: Recommended actions
          items:
            type: string
        metrics:
          type: object
          description: Quantitative metrics
          additionalProperties:
            type: number
            format: float
        visualizable:
          type: boolean
          description: Whether this anomaly can be visualized
          default: true
        visualization_data:
          type: object
          description: Data for visualization
          
    VerificationConsistency:
      type: object
      required:
        - consistency_id
        - detection_time
        - strength
        - confidence
        - description
        - stability_metric
        - duration
      properties:
        consistency_id:
          type: string
          description: Unique identifier for this consistency
        content_fingerprints:
          type: array
          description: Fingerprints of content involved
          items:
            type: string
        fossil_ids:
          type: array
          description: IDs of fossils that form this consistency
          items:
            type: string
        detection_time:
          type: string
          format: date-time
          description: When the consistency was detected
        strength:
          type: number
          format: float
          minimum: 0
          maximum: 1
          description: Strength of the consistency
        confidence:
          type: number
          format: float
          minimum: 0
          maximum: 1
          description: Confidence in the consistency detection
        description:
          type: string
          description: Human-readable description
        stability_metric:
          type: number
          format: float
          description: Measure of stability over time
        duration:
          type: integer
          description: Duration in days
        metrics:
          type: object
          description: Quantitative metrics
          additionalProperties:
            type: number
            format: float
        visualizable:
          type: boolean
          description: Whether this consistency can be visualized
          default: true
        visualization_data:
          type: object
          description: Data for visualization
          
    ConfidenceEvolution:
      type: object
      required:
        - content_fingerprint
        - scores
        - timestamps
        - trend
        - stability
        - description
      properties:
        content_fingerprint:
          type: string
          description: Fingerprint of the content
        fossil_ids:
          type: array
          description: IDs of fossils in chronological order
          items:
            type: string
        scores:
          type: array
          description: Confidence scores in chronological order
          items:
            type: number
            format: float
        timestamps:
          type: array
          description: Timestamps for each score
          items:
            type: string
            format: date-time
        trend:
          type: number
          format: float
          minimum: -1
          maximum: 1
          description: Overall trend direction (-1 to 1)
        stability:
          type: number
          format: float
          minimum: 0
          maximum: 1
          description: Stability of scores over time
        description:
          type: string
          description: Human-readable description
        visualization_data:
          type: object
          description: Data for visualization
          
    VerificationFossil:
      type: object
      required:
        - content_fingerprint
        - event_type
        - content_type
        - verification_score
        - timestamp
        - privacy_level
      properties:
        content_fingerprint:
          type: string
          description: Privacy-preserving hash of the content
        event_type:
          type: string
          enum: [watermark_detection, artifact_detection, semantic_coherence, temporal_consistency, manual_verification, cross_modal_verification, consensus_verification, archaeological_pattern]
          description: Type of verification event
        content_type:
          type: string
          enum: [text, image, audio, video, multimodal]
          description: Type of content verified
        verification_score:
          type: number
          format: float
          minimum: 0
          maximum: 1
          description: Verification score
        timestamp:
          type: string
          format: date-time
          description: When the verification occurred
        privacy_level:
          type: string
          enum: [public, protected, private, anonymized]
          description: Privacy level for this fossil
        context:
          type: object
          description: Context of verification
        source_id:
          type: string
          description: ID of verification source (node, system)
        source_type:
          type: string
          description: Type of source (AI, human, hybrid)
        confidence:
          type: number
          format: float
          minimum: 0
          maximum: 1
          description: Confidence in the verification result
          default: 1.0
        related_fossils:
          type: array
          description: IDs of related fossils
          items:
            type: string
        tags:
          type: array
          description: Searchable tags
          items:
            type: string
            
    FossilResponse:
      type: object
      required:
        - fossil_id
        - content_fingerprint
        - timestamp
      properties:
        fossil_id:
          type: string
          description: Unique identifier for the stored fossil
        content_fingerprint:
          type: string
          description: Privacy-preserving hash of the content
        timestamp:
          type: string
          format: date-time
          description: When the fossil was stored
          
    NodeRegistration:
      type: object
      required:
        - node_id
        - capabilities
        - public_key
      properties:
        node_id:
          type: string
          description: Unique identifier for the node
        capabilities:
          type: array
          description: Verification capabilities of this node
          items:
            type: string
            enum: [text_watermark, text_artifact, image_artifact, audio_artifact, video_artifact, semantic_coherence, temporal_consistency, cross_modal]
          minItems: 1
        stake:
          type: number
          format: float
          minimum: 0
          description: Resources committed to the network
          default: 0
        public_key:
          type: string
          description: Public key for identity verification
        node_type:
          type: string
          enum: [full, specialized, bridge]
          description: Type of verification node
          default: full
        contact_info:
          type: object
          description: Optional contact information
          
    NodeResponse:
      type: object
      required:
        - node_id
        - registration_status
        - timestamp
      properties:
        node_id:
          type: string
          description: Unique identifier for the node
        registration_status:
          type: string
          enum: [pending, approved, rejected]
          description: Status of the registration
        initial_reputation:
          type: number
          format: float
          minimum: 0
          maximum: 1
          description: Initial reputation score
        network_address:
          type: string
          description: Address for communicating with the node
        timestamp:
          type: string
          format: date-time
          description: When the node was registered
          
    NodeInfo:
      type: object
      required:
        - node_id
        - capabilities
        - reputation
        - status
      properties:
        node_id:
          type: string
          description: Unique identifier for the node
        capabilities:
          type: array
          description: Verification capabilities of this node
          items:
            type: string
        reputation:
          type: number
          format: float
          minimum: 0
          maximum: 1
          description: Current reputation score
        status:
          type: string
          enum: [active, inactive, probation, suspended]
          description: Current status of the node
        stake:
          type: number
          format: float
          minimum: 0
          description: Resources committed to the network
        verification_count:
          type: integer
          description: Number of verifications performed
        consensus_alignment:
          type: number
          format: float
          minimum: 0
          maximum: 1
          description: Alignment with consensus
        join_date:
          type: string
          format: date-time
          description: When the node joined the network
          
    VerificationChallenge:
      type: object
      required:
        - content
        - verification_types
      properties:
        content:
          type: object
          description: Content to be verified
          properties:
            text:
              type: string
              description: Text content
            image:
              type: string
              format: binary
              description: Image content in base64 encoding
            audio:
              type: string
              format: binary
              description: Audio content in base64 encoding
            video:
              type: string
              format: binary
              description: Video content in base64 encoding
          anyOf:
            - required: [text]
            - required: [image]
            - required: [audio]
            - required: [video]
        content_fingerprint:
          type: string
          description: Optional pre-computed content fingerprint
        verification_types:
          type: array
          description: Types of verification to perform
          items:
            type: string
            enum: [watermark_detection, artifact_detection, semantic_coherence, temporal_consistency, cross_modal_verification]
          minItems: 1
        context:
          type: object
          description: Contextual information for verification
        privacy_level:
          type: string
          enum: [public, protected, private, anonymized]
          description: Privacy level for this challenge
          default: protected
        min_nodes:
          type: integer
          description: Minimum number of nodes for verification
          minimum: 1
          default: 3
        timeout:
          type: integer
          description: Timeout for verification in seconds
          minimum: 1
          default: 60
          
    ChallengeResponse:
      type: object
      required:
        - challenge_id
        - status
        - timestamp
      properties:
        challenge_id:
          type: string
          format: uuid
          description: Unique identifier for the challenge
        status:
          type: string
          enum: [accepted, rejected]
          description: Status of the challenge submission
        estimated_completion:
          type: string
          format: date-time
          description: Estimated completion time
        selected_nodes:
          type: integer
          description: Number of nodes selected for verification
        timestamp:
          type: string
          format: date-time
          description: When the challenge was submitted
          
    ChallengeStatus:
      type: object
      required:
        - challenge_id
        - status
        - timestamp
      properties:
        challenge_id:
          type: string
          format: uuid
          description: Unique identifier for the challenge
        status:
          type: string
          enum: [pending, in_progress, completed, failed, timeout]
          description: Status of the challenge
        consensus_result:
          $ref: '#/components/schemas/ConsensusResult'
        node_results:
          type: array
          description: Individual node verification results
          items:
            $ref: '#/components/schemas/NodeResult'
        timestamp:
          type: string
          format: date-time
          description: When the status was last updated
          
    ConsensusResult:
      type: object
      required:
        - verification_score
        - confidence
        - node_agreement
      properties:
        verification_score:
          type: number
          format: float
          minimum: 0
          maximum: 1
          description: Consensus verification score
        confidence:
          type: number
          format: float
          minimum: 0
          maximum: 1
          description: Confidence in the consensus
        node_agreement:
          type: number
          format: float
          minimum: 0
          maximum: 1
          description: Degree of agreement among nodes
        contributing_nodes:
          type: integer
          description: Number of nodes that contributed to consensus
        dissenting_opinions:
          type: array
          description: Significant dissenting views
          items:
            type: object
            properties:
              node_id:
                type: string
                description: Node ID with dissenting opinion
              score:
                type: number
                format: float
                description: Dissenting score
              reasoning:
                type: string
                description: Reasoning for dissent
          
    NodeResult:
      type: object
      required:
        - node_id
        - verification_score
        - confidence
        - timestamp
      properties:
        node_id:
          type: string
          description: ID of the node
        verification_score:
          type: number
          format: float
          minimum: 0
          maximum: 1
          description: Verification score from this node
        confidence:
          type: number
          format: float
          minimum: 0
          maximum: 1
          description: Confidence in the verification result
        reasoning:
          type: string
          description: Reasoning for the verification result
        evidence:
          type: object
          description: Evidence supporting the verification
        timestamp:
          type: string
          format: date-time
          description: When the verification was performed
          
    ConsensusDetails:
      type: object
      required:
        - consensus_score
        - node_agreement
        - participating_nodes
      properties:
        consensus_score:
          type: number
          format: float
          minimum: 0
          maximum: 1
          description: Score determined by consensus
        node_agreement:
          type: number
          format: float
          minimum: 0
          maximum: 1
          description: Degree of agreement among nodes
        participating_nodes:
          type: integer
          description: Number of nodes that participated
        consensus_confidence:
          type: number
          format: float
          minimum: 0
          maximum: 1
          description: Confidence in the consensus
        node_diversity:
          type: number
          format: float
          minimum: 0
          maximum: 1
          description: Diversity of node types and capabilities
        verification_methods:
          type: array
          description: Methods used across nodes
          items:
            type: string
            enum: [watermark_detection, artifact_detection, semantic_coherence, temporal_consistency, cross_modal_verification]
          
    CompressionRequest:
      type: object
      required:
        - verification_history
      properties:
        verification_history:
          type: array
          description: Verification events to compress
          items:
            $ref: '#/components/schemas/VerificationEvent'
        content_fingerprint:
          type: string
          description: Fingerprint of the content
        field_snapshot:
          $ref: '#/components/schemas/TrustFieldTensor'
        compression_ratio:
          type: number
          format: float
          minimum: 0
          maximum: 1
          description: Target compression ratio (0-1)
          default: 0.1
        preserve_features:
          type: array
          description: Features to prioritize for preservation
          items:
            type: string
            enum: [temporal_trend, anomaly_markers, confidence_boundaries, source_diversity, verification_methods]
        compression_mode:
          type: string
          enum: [statistical, semantic, differential, pattern_based, hybrid]
          description: Compression strategy to use
          default: hybrid
          
    VerificationEvent:
      type: object
      required:
        - event_type
        - content_type
        - verification_score
        - timestamp
      properties:
        event_id:
          type: string
          description: Unique identifier for this event
        event_type:
          type: string
          enum: [watermark_detection, artifact_detection, semantic_coherence, temporal_consistency, manual_verification, cross_modal_verification, consensus_verification, archaeological_pattern]
          description: Type of verification event
        content_type:
          type: string
          enum: [text, image, audio, video, multimodal]
          description: Type of content verified
        verification_score:
          type: number
          format: float
          minimum: 0
          maximum: 1
          description: Verification score
        timestamp:
          type: string
          format: date-time
          description: When the verification occurred
        context:
          type: object
          description: Context of verification
        source:
          type: string
          description: Source of the verification
        confidence:
          type: number
          format: float
          minimum: 0
          maximum: 1
          description: Confidence in the verification result
        related_events:
          type: array
          description: IDs of related events
          items:
            type: string
        metadata:
          type: object
          description: Additional metadata
          
    CompressionResponse:
      type: object
      required:
        - compressed_signal
        - decompression_key
        - compression_metrics
      properties:
        compressed_signal:
          $ref: '#/components/schemas/CompressedSignal'
        decompression_key:
          $ref: '#/components/schemas/DecompressionKey'
        compression_metrics:
          type: object
          required:
            - compression_ratio
            - information_density
            - preservation_score
          properties:
            compression_ratio:
              type: number
              format: float
              description: Achieved compression ratio
            information_density:
              type: number
              format: float
              description: Information density of compressed signal
            preservation_score:
              type: number
              format: float
              minimum: 0
              maximum: 1
              description: How well critical information was preserved
            feature_preservation:
              type: object
              description: Preservation scores for specific features
              additionalProperties:
                type: number
                format: float
                minimum: 0
                maximum: 1
          
    CompressedSignal:
      type: object
      required:
        - signal_id
        - content_fingerprint
        - compressed_data
        - compression_type
        - timestamp
      properties:
        signal_id:
          type: string
          format: uuid
          description: Unique identifier for this compressed signal
        content_fingerprint:
          type: string
          description: Fingerprint of the content
        compressed_data:
          type: string
          description: The compressed trust signal data
        compression_type:
          type: string
          enum: [statistical, semantic, differential, pattern_based, hybrid]
          description: Compression strategy used
        features_preserved:
          type: array
          description: Features preserved in the compression
          items:
            type: string
            enum: [temporal_trend, anomaly_markers, confidence_boundaries, source_diversity, verification_methods]
        partial_decompression_paths:
          type: array
          description: Paths for partial decompression
          items:
            type: string
        timestamp:
          type: string
          format: date-time
          description: When the signal was compressed
          
    DecompressionKey:
      type: object
      required:
        - key_id
        - signal_id
        - key_data
      properties:
        key_id:
          type: string
          format: uuid
          description: Unique identifier for this key
        signal_id:
          type: string
          format: uuid
          description: ID of the compressed signal
        key_data:
          type: string
          description: Data needed for decompression
        security_level:
          type: string
          enum: [public, protected, private]
          description: Security level for this key
          default: protected
        expiration:
          type: string
          format: date-time
          description: When the key expires
        partial_keys:
          type: object
          description: Keys for partial decompression
          additionalProperties:
            type: string
            
    DecompressionRequest:
      type: object
      required:
        - compressed_signal
        - decompression_key
      properties:
        compressed_signal:
          $ref: '#/components/schemas/CompressedSignal'
        decompression_key:
          $ref: '#/components/schemas/DecompressionKey'
        detail_level:
          type: string
          enum: [full, summary, critical_only]
          description: Level of detail to decompress
          default: full
        decompression_path:
          type: string
          description: Path for partial decompression
          
    DecompressionResponse:
      type: object
      required:
        - signal_id
        - decompressed_data
        - detail_level
        - timestamp
      properties:
        signal_id:
          type: string
          format: uuid
          description: ID of the compressed signal
        decompressed_data:
          type: object
          description: The decompressed trust data
        detail_level:
          type: string
          enum: [full, summary, critical_only]
          description: Level of detail decompressed
        decompression_path:
          type: string
          description: Path used for partial decompression
        reconstruction_fidelity:
          type: number
          format: float
          minimum: 0
          maximum: 1
          description: Fidelity of reconstruction
        timestamp:
          type: string
          format: date-time
          description: When the decompression was performed
          
    InterfaceRequest:
      type: object
      required:
        - content
        - environment_context
      properties:
        content:
          type: object
          description: Content for which to get an interface
          properties:
            text:
              type: string
              description: Text content
            image:
              type: string
              format: binary
              description: Image content in base64 encoding
            audio:
              type: string
              format: binary
              description: Audio content in base64 encoding
            video:
              type: string
              format: binary
              description: Video content in base64 encoding
        trust_data:
          type: object
          description: Trust data to display
          properties:
            overall_score:
              type: number
              format: float
              minimum: 0
              maximum: 1
            temporal_field:
              $ref: '#/components/schemas/TemporalFieldSummary'
            archaeological_patterns:
              type: array
              items:
                $ref: '#/components/schemas/ArchaeologicalPattern'
            consensus_data:
              $ref: '#/components/schemas/ConsensusDetails'
            compressed_signal:
              $ref: '#/components/schemas/CompressedSignal'
        user_context:
          type: object
          description: Context about the user
          properties:
            user_id:
              type: string
              description: Unique identifier for the user
            preferences:
              type: object
              description: User preferences
            interaction_history:
              type: object
              description: History of user interactions
        environment_context:
          type: object
          required:
            - domain
            - audience
          properties:
            domain:
              type: string
              description: Content domain (e.g., news, education)
              example: news
            audience:
              type: string
              description: Target audience
              example: general
            platform:
              type: string
              description: Platform where interface will be displayed
              example: mobile_app
            purpose:
              type: string
              description: Purpose of the verification
              example: information
            
    InterfaceResponse:
      type: object
      required:
        - interface_id
        - adapted_interface
        - timestamp
      properties:
        interface_id:
          type: string
          format: uuid
          description: Unique identifier for this interface
        adapted_interface:
          type: object
          required:
            - type
            - configuration
          properties:
            type:
              type: string
              enum: [educational, journalistic, creative, scientific, general]
              description: Type of interface
            configuration:
              type: object
              description: Configuration for the interface
            components:
              type: array
              description: UI components for the interface
              items:
                type: object
                required:
                  - type
                  - content
                properties:
                  type:
                    type: string
                    description: Type of component
                  content:
                    type: object
                    description: Content for the component
                  style:
                    type: object
                    description: Style for the component
                  interaction:
                    type: object
                    description: Interaction behavior
            progressive_disclosure:
              type: array
              description: Levels of disclosure
              items:
                type: object
                properties:
                  level:
                    type: integer
                  components:
                    type: array
                    items:
                      type: string
        adaptation_rationale:
          type: string
          description: Explanation for the adaptation
        personalization_applied:
          type: boolean
          description: Whether personalization was applied
        timestamp:
          type: string
          format: date-time
          description: When the interface was generated
          
    ResidueLog:
      type: object
      required:
        - residue_type
        - description
        - source
      properties:
        residue_id:
          type: string
          description: Optional identifier for this residue
        residue_type:
          type: string
          enum: [verification_failure, anomaly, edge_case, user_feedback, system_limitation]
          description: Type of residue
        description:
          type: string
          description: Description of the residue
        source:
          type: string
          description: Source of the residue
        content_fingerprint:
          type: string
          description: Fingerprint of related content
        verification_context:
          type: object
          description: Context of the verification
        severity:
          type: string
          enum: [low, medium, high, critical]
          description: Severity of the residue
          default: medium
        metadata:
          type: object
          description: Additional metadata
          
    ResidueLogResponse:
      type: object
      required:
        - residue_id
        - status
        - timestamp
      properties:
        residue_id:
          type: string
          description: Unique identifier for this residue
        status:
          type: string
          enum: [logged, analyzed, action_required]
          description: Status of the residue log
        catalog_entry:
          type: string
          description: Entry in the symbolic residue catalog
        forecast_impact:
          type: object
          description: Forecast impact of this residue
          properties:
            affected_components:
              type: array
              items:
                type: string
            priority:
              type: string
              enum: [low, medium, high, critical]
            recommended_actions:
              type: array
              items:
                type: string
        timestamp:
          type: string
          format: date-time
          description: When the residue was logged
          
    ForecastRequest:
      type: object
      properties:
        residue_types:
          type: array
          description: Types of residue to forecast
          items:
            type: string
            enum: [verification_failure, anomaly, edge_case, user_feedback, system_limitation]
        component_focus:
          type: string
          description: Component to focus forecast on
          enum: [temporal_trust_field, collective_memory, decentralized_protocol, information_compression, embodied_interface, cross_modal_engine, all]
        time_horizon:
          type: string
          description: Time horizon for forecast
          enum: [short_term, medium_term, long_term]
          default: medium_term
        forecast_detail:
          type: string
          description: Level of detail for forecast
          enum: [summary, detailed]
          default: summary
          
    ForecastResponse:
      type: object
      required:
        - forecast_id
        - forecasts
        - timestamp
      properties:
        forecast_id:
          type: string
          format: uuid
          description: Unique identifier for this forecast
        forecasts:
          type: array
          description: Forecasted residue patterns
          items:
            type: object
            required:
              - pattern_type
              - likelihood
              - impact
              - description
            properties:
              pattern_type:
                type: string
                description: Type of residue pattern
              likelihood:
                type: number
                format: float
                minimum: 0
                maximum: 1
                description: Likelihood of occurrence
              impact:
                type: string
                enum: [low, medium, high, critical]
                description: Potential impact
              time_frame:
                type: string
                description: Expected time frame
              description:
                type: string
                description: Description of the pattern
              affected_components:
                type: array
                items:
                  type: string
              recommended_preparations:
                type: array
                items:
                  type: string
        confidence:
          type: number
          format: float
          minimum: 0
          maximum: 1
          description: Overall confidence in forecast
        data_points:
          type: integer
          description: Number of data points used
        timestamp:
          type: string
          format: date-time
          description: When the forecast was generated
          
    BlueprintSummary:
      type: object
      required:
        - blueprint_id
        - name
        - description
        - component_type
      properties:
        blueprint_id:
          type: string
          description: Unique identifier for the blueprint
        name:
          type: string
          description: Name of the blueprint
        description:
          type: string
          description: Brief description of the blueprint
        component_type:
          type: string
          description: Type of component this blueprint evolves
        complexity:
          type: string
          enum: [low, medium, high]
          description: Complexity of the evolution
        estimated_duration:
          type: string
          description: Estimated time to complete
        success_rate:
          type: number
          format: float
          minimum: 0
          maximum: 1
          description: Historical success rate
          
    BlueprintDetails:
      type: object
      required:
        - blueprint_id
        - name
        - description
        - parameters
        - agent_sequence
      properties:
        blueprint_id:
          type: string
          description: Unique identifier for the blueprint
        name:
          type: string
          description: Name of the blueprint
        description:
          type: string
          description: Detailed description of the blueprint
        parameters:
          type: object
          description: Parameters for this blueprint
        agent_sequence:
          type: array
          description: Sequence of AI agents to execute the blueprint
          items:
            type: object
            required:
              - agent_role
              - prompt_template_id
            properties:
              agent_role:
                type: string
                description: Role of the agent
              prompt_template_id:
                type: string
                description: ID of the prompt template
              expected_output:
                type: string
                description: Expected output from this agent
              timeout:
                type: integer
                description: Timeout in seconds
        metrics:
          type: array
          description: Metrics to evaluate the evolution
          items:
            type: object
            required:
              - metric_id
              - name
              - target_value
            properties:
              metric_id:
                type: string
              name:
                type: string
              target_value:
                type: string
              evaluation_method:
                type: string
        example_output:
          type: object
          description: Example output from this blueprint
        documentation:
          type: string
          description: Additional documentation
          
    CycleRequest:
      type: object
      required:
        - blueprint_id
      properties:
        blueprint_id:
          type: string
          description: ID of the blueprint to use
        parameters:
          type: object
          description: Parameters for the blueprint
        component_path:
          type: string
          description: Path to the component to evolve
        motivation:
          type: string
          description: Motivation for this evolution
        constraints:
          type: array
          description: Constraints for the evolution
          items:
            type: string
        priority:
          type: string
          enum: [low, medium, high, critical]
          description: Priority of this cycle
          default: medium
          
    CycleResponse:
      type: object
      required:
        - cycle_id
        - status
        - blueprint_id
        - timestamp
      properties:
        cycle_id:
          type: string
          format: uuid
          description: Unique identifier for this cycle
        status:
          type: string
          enum: [initiated, in_progress, awaiting_feedback, completed, failed]
          description: Status of the cycle
        blueprint_id:
          type: string
          description: ID of the blueprint being used
        estimated_completion:
          type: string
          format: date-time
          description: Estimated completion time
        current_agent:
          type: string
          description: Currently active agent
        progress:
          type: number
          format: float
          minimum: 0
          maximum: 1
          description: Progress of the cycle
        timestamp:
          type: string
          format: date-time
          description: When the cycle was initiated
          
    CycleStatus:
      type: object
      required:
        - cycle_id
        - status
        - blueprint_id
        - timestamp
      properties:
        cycle_id:
          type: string
          format: uuid
          description: Unique identifier for this cycle
        status:
          type: string
          enum: [initiated, in_progress, awaiting_feedback, completed, failed]
          description: Status of the cycle
        blueprint_id:
          type: string
          description: ID of the blueprint being used
        current_agent:
          type: string
          description: Currently active agent
        agent_history:
          type: array
          description: History of agents that have worked on this cycle
          items:
            type: object
            properties:
              agent_role:
                type: string
              start_time:
                type: string
                format: date-time
              end_time:
                type: string
                format: date-time
              output_summary:
                type: string
        progress:
          type: number
          format: float
          minimum: 0
          maximum: 1
          description: Progress of the cycle
        feedback_requests:
          type: array
          description: Requests for feedback
          items:
            type: object
            properties:
              request_id:
                type: string
              question:
                type: string
              options:
                type: array
                items:
                  type: string
              timestamp:
                type: string
                format: date-time
        outputs:
          type: array
          description: Outputs produced by the cycle
          items:
            type: object
            properties:
              type:
                type: string
              content:
                type: string
              path:
                type: string
        residue_generated:
          type: array
          description: Residue generated during the cycle
          items:
            $ref: '#/components/schemas/ResidueLog'
        timestamp:
          type: string
          format: date-time
          description: When the status was last updated
          
    CycleFeedback:
      type: object
      required:
        - feedback_type
        - content
      properties:
        feedback_type:
          type: string
          enum: [direction, evaluation, constraint, guidance]
          description: Type of feedback
        content:
          type: string
          description: Feedback content
        request_id:
          type: string
          description: ID of the feedback request
        options_selected:
          type: array
          description: Options selected from the request
          items:
            type: string
        priority:
          type: string
          enum: [low, medium, high, critical]
          description: Priority of this feedback
          default: medium
          
    FeedbackResponse:
      type: object
      required:
        - feedback_id
        - status
        - timestamp
      properties:
        feedback_id:
          type: string
          format: uuid
          description: Unique identifier for this feedback
        status:
          type: string
          enum: [received, processing, applied, rejected]
          description: Status of the feedback
        impact:
          type: string
          description: How the feedback will impact the cycle
        next_steps:
          type: array
          description: Next steps based on feedback
          items:
            type: string
        timestamp:
          type: string
          format: date-time
          description: When the feedback was submitted
          
    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: string
          description: Error code
        message:
          type: string
          description: Error message
        details:
          type: array
          description: Additional error details
          items:
            type: object
            properties:
              field:
                type: string
              issue:
                type: string

  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: X-API-Key
